jps
用来输出JVM中运行的进程状态信息
命令行参数选项说明如下
-q 不输出类名、Jar名和传入main方法的参数
-m 输出传入main方法的参数
-l 输出main类或Jar的全限名
-v 输出传入JVM的参数

jstack
用来查看某个Java进程内的线程堆栈信息
语法格式如下
jstack [option] pid
jstack [option] executable core
jstack [option] [server-id@]remote-hostname-or-ip
命令行参数选项说明如下
-l long listings，会打印出额外的锁信息，在发生死锁时可以用jstack -l pid来观察锁持有情况
-m mixed mode，不仅会输出Java堆栈信息，还会输出C/C++堆栈信息（比如Native方法）

jstack可以定位到线程堆栈，根据堆栈信息我们可以定位到具体代码，所以它在JVM性能调优中使用得非常多。下面我们来一个实例找出某个Java进程中最耗费CPU的Java线程并定位堆栈信息，用到的命令有ps、top、printf、jstack、grep。

第一步先找出Java进程ID
ps -ef | grep 应用名称 | grep -v grep 
pidof java

第二步找出该进程内最耗费CPU的线程
ps -Lfp pid
ps -mp pid -o THREAD, tid, time
top -Hp pid

十进制转换成十六进制
printf "%x\n" 21742

jstack pid | grep 54ee




 