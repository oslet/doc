input {
	
	beats{
		port => 5000
		tags => ["nginx_access_log"]
	}


       	beats{
              	port => 5002
		codec => multiline {
		pattern => "(^%{TOMCAT_DATESTAMP})|(^%{CATALINA_DATESTAMP})"
		negate => true
		what => "previous"
		}
                tags => ["tomcat_catalina_log"]
        }


	beats{
                port => 5010
                codec => multiline {
                   pattern => "^# User@Host:"
                   negate => true
                   what => previous
                }
		tags => ["mysql_slowlog"]
        }	
}

filter {

 if "nginx_access_log" in [tags] {
  	grok {
	#patterns_dir => [ "/opt/logstash/patterns" ]
    	#match => { "message" => "%{COMBINEDAPACHELOG}" }
    	match => { "message" => "%{NGINXACCESS}" }
	}

    mutate {
	convert => ["bytes", "integer"]
    }

    date {
	match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
    }

    useragent {
	source => "agent"
	}
if [agent] =~ /\bWOW64\b/ {
  mutate {
    add_tag => ["64bit"]
  }
}

    geoip {
	source => "clientip"
	target => "geoip"
	database => "/opt/logstash/GeoLiteCity.dat"
	add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
	add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}" ]
	}
    mutate {
	convert => [ "[geoip][coordinates]", "float"]
	}
	

	kv {
	  prefix => "url_param_"
	  source => "request"
	  field_split => "&?"
	  value_split => "="
	  #include_keys => ["type","targetid","cityid","lastEventId","folioid","userid","chainid","shift","rand","token","timestamp","hash"]
	  exclude_keys => ["token","timestamp","hash"]
	   }

#	urldecode {
#		all_fields => true
#	}

 }

if "tomcat_catalina_log" in [tags] {
	date {
		match => [ "timestamp", "yyyy-MM-dd HH:mm:ss,SSS Z", "MMM dd, yyyy HH:mm:ss a" ]
		#target => "@timestamp"
	}
}


 if "mysql_slowlog" in [tags] {

  grok {
	match => [ "message", "(?m)^#\s+User@Host:\s+%{USER:user}\[[^\]]+\]\s+@\s+%{USER:clienthost}\s+\[(?:%{IP:clientip})?\]\s+Id:\s+%{NUMBER:id:int}\n#\s+Schema:\s+%{USER:schema}\s+Last_errno:\s+%{NUMBER:lasterrorno:int}\s+Killed:\s+%{NUMBER:killedno:int}\n#\s+Query_time:\s+%{NUMBER:query_time:float}\s+Lock_time:\s+%{NUMBER:lock_time:float}\s+Rows_sent:\s+%{NUMBER:rows_sent:int}\s+Rows_examined:\s+%{NUMBER:rows_examined:int}\s+Rows_affected:\s+%{NUMBER:rows_affected:int}\n#\s+Bytes_sent:\s+%{NUMBER:bytes_sent:int}\n\s*(?:use\s+%{USER:usedatabase};\s*\n)?SET\s+timestamp=%{NUMBER:timestamp};\n\s*(?<query>(?<action>\w+)\b.*)\s*(?:\n#\s+Time)?.*$"]

  } 

  date {
    match => [ "timestamp", "UNIX" ]
    #remove_field => [ "timestamp" ]
  }


     
          }

}

output {


    if "nginx_access_log" in [tags] {
	elasticsearch {
		hosts=>["10.10.10.10:9200"]
		index=>"%{[@metadata][beat]}-%{+YYYY.MM.dd}"
		#index=>"pms"
		document_type => "%{[@metadata][type]}"
                user => "logstash"
                password => "passwd"
	}
    }


    if "tomcat_catalina_log" in [tags] {
        elasticsearch {
                hosts=>["10.10.10.10:9200"]
               	index=>"tomcat_catalina_log-%{+YYYY.MM.dd}"
                document_type => "%{[@metadata][type]}"
                user => "logstash"
                password => "passwd"
        }
    }


    if "mysql_slowlog" in [tags] {
	elasticsearch {
		hosts=>["10.10.10.10:9200"]
		index=>"mysql_slowlog-%{+YYYY.MM.dd}"
                document_type => "%{[@metadata][type]}"
                user => "logstash"
                password => "passwd"
	}
    }
}
